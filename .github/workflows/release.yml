name: Release plugin

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g., 2.1.9). Must match plugin header.'
        required: true
        type: string

jobs:
  build-and-release:
    name: Build and publish GitHub release
    runs-on: ubuntu-latest
    steps:
      # Checkout based on trigger type (tag push or manual)
      - name: Checkout (tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout (manual)
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version
        id: vars
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            TAG="${GITHUB_REF##*/}"
            VERSION="${TAG#v}"
          else
            VERSION="${{ github.event.inputs.version }}"
            TAG="v${VERSION}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Resolved tag: $TAG; version: $VERSION"

      - name: Verify plugin version matches tag
        shell: bash
        run: |
          PLUGIN_VERSION=$(grep "Version:" plugin/cloudflare-ab-testing.php | head -1 | awk -F': *' '{print $2}' | tr -d ' ')
          if [ "$PLUGIN_VERSION" != "${{ steps.vars.outputs.version }}" ]; then
            echo "Plugin header version $PLUGIN_VERSION does not match tag ${{ steps.vars.outputs.version }}"
            exit 1
          fi
          DEFINE_VERSION=$(grep "define.*CLOUDFLARE_AB_TESTING_VERSION" plugin/cloudflare-ab-testing.php | sed "s/.*'\([^']*\)'.*/\1/")
          if [ "$DEFINE_VERSION" != "${{ steps.vars.outputs.version }}" ]; then
            echo "Defined constant version $DEFINE_VERSION does not match tag ${{ steps.vars.outputs.version }}"
            exit 1
          fi

      - name: Build release ZIP
        shell: bash
        run: bash scripts/build-plugin.sh

      - name: Create or update GitHub Release
        id: gh_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          target_commitish: ${{ github.sha }}
          name: Cloudflare A/B Testing v${{ steps.vars.outputs.version }}
          draft: false
          prerelease: ${{ contains(steps.vars.outputs.version, '-') }}
          generate_release_notes: true
          files: |
            releases/cloudflare-ab-testing-v${{ steps.vars.outputs.version }}*.zip
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "Published release ${{ steps.vars.outputs.tag }} with asset(s):"
          ls -1 releases/cloudflare-ab-testing-v${{ steps.vars.outputs.version }}*.zip
