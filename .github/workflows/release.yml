name: Create Plugin Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Update plugin version
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        sed -i "s/Version:           .*/Version:           $VERSION/" plugin/cloudflare-ab-testing.php
        sed -i "s/define( 'CLOUDFLARE_AB_TESTING_VERSION', '.*' );/define( 'CLOUDFLARE_AB_TESTING_VERSION', '$VERSION' );/" plugin/cloudflare-ab-testing.php

    - name: Build the plugin
      id: build
      run: |
        chmod +x ./scripts/build-plugin.sh
        ./scripts/build-plugin.sh
        
    - name: Get Release Info
      id: release_info
      run: |
        VERSION=$(grep "Version:" "plugin/cloudflare-ab-testing.php" | head -1 | awk -F': *' '{print $2}' | tr -d ' ')
        ZIP_NAME="cloudflare-ab-testing-v$VERSION.zip"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "zip_name=$ZIP_NAME" >> $GITHUB_OUTPUT
        echo "zip_path=releases/$ZIP_NAME" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.ref }} \
          --title "Release v${{ steps.release_info.outputs.version }}" \
          --notes "Release for version v${{ steps.release_info.outputs.version }}" \
          ./${{ steps.release_info.outputs.zip_path }}
